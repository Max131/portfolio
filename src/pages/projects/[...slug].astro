---
import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import Layout from "@layouts/Project.astro";

import { defaultLang as defaultLocale } from "@i18n/ui.ts";
import { useTranslation } from "@i18n/utils.ts";

const currentLocale = Astro.currentLocale || defaultLocale;
const t = useTranslation(currentLocale);

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await render(post);
const images = post.data.images || [];
const IMAGES_PATH = "/images/projects/";
---

<Layout title={post.data.title}>
  <div class="content text-lg mt-12 single">
    <div class="md:grid grid-cols-2 gap-8">
      <div>
        <Content />

        <p class="mt-8 text-sm font-medium font-title">
          {t("page.single.techs")}:
        </p>
        <ul class="mt-auto pb-4">
          {
            post.data.tags?.map((tag) => (
              <li class="inline-block bg-stone-100 text-stone-600 text-xs font-medium mr-2 px-2.5 py-0.5 rounded">
                {tag}
              </li>
            ))
          }
        </ul>
        {
          post.data.video && (
            <video
              class="w-full h-auto rounded shadow-lg my-4"
              src={`${IMAGES_PATH}${post.data.dirimages}/${post.data.video}`}
              controls
            />
          )
        }
        <a
          class="text-sm font-bold p-4 bg-cyan-500 text-white rounded-lg inline-block mt-8 focus-visible:ring-6 ring-cyan-500"
          href={post.data.link}
          target="_blank"
          rel="noopener noreferrer">{t("page.single.visit")}</a
        >
      </div>

      <div class="flex flex-col gap-8 mt-12 md:mt-0">
        <img
          src={`${IMAGES_PATH}${post.data.thumbnail}`}
          alt={`${post.data.title} thumbnail`}
          class="w-full h-auto rounded shadow-lg cursor-pointer object-cover"
          data-lightbox
        />

        {
          images.map((image) => (
            <Image
              class="w-full h-auto rounded shadow-lg object-cover"
              src={`${IMAGES_PATH}${post.data.dirimages}/${image}`}
              width={496}
              height={248}
              alt={`${t("page.single.preview")} ${post.data.title}`}
              class="w-full h-auto rounded"
              data-lightbox
            />
          ))
        }
      </div>
    </div>
  </div>
  <dialog
    id="lightbox-modal"
    class="fixed inset-0 w-full h-dvh place-items-center bg-black/80 p-4 open:grid"
    closedby="any"
  >
    <article>
      <img
        id="lightbox-image"
        class="max-h-[calc(100dvh-2rem)] max-w-full rounded"
        alt="Lightbox Image"
      />
    </article>
    <button
      id="lightbox-close"
      class="text-5xl leading-0 absolute top-4 right-4 text-white cursor-pointer"
      aria-label="Close Lightbox">&times;</button
    >
  </dialog>

  <script>
    const lightboxImages = document.querySelectorAll("[data-lightbox]");
    const lightboxModal = document.querySelector("#lightbox-modal");
    const lightboxImage = document.querySelector("#lightbox-image");
    const lightboxClose = document.querySelector("#lightbox-close");

    lightboxImages?.forEach((image) => {
      image.addEventListener("click", () => {
        lightboxImage.src = image.src;
        lightboxModal.setAttribute("open", true);
      });
    });

    lightboxClose?.addEventListener("click", () => {
      lightboxModal.removeAttribute("open");
      lightboxImage.src = "";
    });
  </script>

  <style>
    [data-lightbox] {
      cursor: pointer;
    }
  </style>
</Layout>
